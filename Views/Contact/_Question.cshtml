@using FastFood.Models;
@{
	@model FastFood_KhachHang_GuiCauHoi 
}
@using (Html.BeginForm("Question", "Contact", null, FormMethod.Post, true, new { @id = "sendQuestion", @class = "contact-form wow fadeInUp" }))
{
	@Html.AntiForgeryToken()
	<div class="row">
		<div class="col-lg-6">
			<div class="form_group">
				@Html.TextBoxFor(x=>x.TenKhachHang, new {@class = "form_control", @placeholder="Tên khách hàng"})

			</div>
		</div>
		<div class="col-lg-6">
			<div class="form_group">
				@Html.TextBoxFor(x => x.SoDienThoai, new { @class = "form_control", @placeholder = "Số điện thoại" })
			</div>
		</div>
		<div class="col-lg-12">
			<div class="form_group">
				@Html.TextBoxFor(x => x.Email, new { @class = "form_control", @placeholder = "Email" })
			</div>
		</div>
		<div class="col-lg-12">
			<div class="form_group">
				@Html.TextAreaFor(x => x.NoiDung, new { @class = "form_control", @placeholder = "Nhập nội dung tại đây....", @rows = "5" })
			</div>
		</div>
		<div class="col-lg-12">
			<div class="form_group">
				<button class="theme-btn style-one" type="submit">Gửi</button>
			</div>
		</div>
	</div>
}

<script>
		$(document).ready(function () {
			$("#sendQuestion").on("submit", function (e) {
				e.preventDefault();

				let formData = $(this).serialize();

				$.ajax({
					url: '@Url.Action("Question", "Contact")',
					type: 'POST',
					dataType: "json",
					data: formData,
					success: function (response) {
						if (response.success) {
							alertMessage(response.type, response.message);
							$("#sendQuestion")[0].reset();
						}
					},
					error: function (xhr, status, error) {
						alert("Đã xảy ra lỗi khi gửi câu hỏi: " + error);
					}
				});
			});
	});
</script>