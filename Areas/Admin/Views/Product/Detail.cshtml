@{
    @model ProductDetailPostViewModel
    var images = ViewBag.ProductImages as string[] ?? new string[] { };
    var productId = ViewBag.ProductId as int?;
}


@using (Html.BeginForm("Detail", "Product", FormMethod.Post, new { area = "Admin", id = "productForm" }))
{
    @Html.AntiForgeryToken()
    @Html.TextBoxFor(m => m.ProductDetail.ProductId, new { @hidden = "" })
    <!-- Start Container Fluid -->
    <div class="container-xxl">

        <div class="row">

            <div class="col-xl-4 col-lg-4">
                <div class="card">
                    <div class="card-body">
                        <div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel">
                            <div class="carousel-inner">
                                @{
                                    bool isFirst = true;
                                    foreach (var image in images!)
                                    {
                                        <div class="carousel-item @(isFirst ? "active" : "")" data-bs-interval='5000'>
                                            <img src="@image" class="d-block w-100" alt="img">
                                        </div>
                                        isFirst = false;
                                    }
                                }
                            </div>
                            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                        </div>

                    </div>
                </div>
                <div class="card mx-auto shadow-sm">
                    <div class="card-header">
                        <h4 class="card-title">Tải ảnh lên</h4>
                    </div>
                    <div class="card-body">
                        <ul class="list-group">
                            @{
                                foreach (string image in images)
                                {
                                    if (!string.IsNullOrEmpty(image))
                                    {
                                        <li class="list-group-item d-flex justify-content-between align-items-baseline" style="max-height: 12rem; overflow-y: auto;">
                                            <a href="@image" class="text-blue fw-bold">
                                                @image.Split("/").Last()
                                            </a>
                                            <button type="button" class="remove-image-btn border-0 bg-white" data-image-url="@image data-product-id="@productId">
                                                <iconify-icon icon="streamline:delete-1-solid" class="text-danger"></iconify-icon>
                                            </button>
                                        </li>
                                    }
                                    
                                }
                            }
                        </ul>
                        @Html.TextBoxFor(x=>x.ProductImages, new { @type = "file", @class = "form-control mt-3", @multiple = "multiple", @accept = "image/*" }))
                    </div>

                </div>


            </div>
            <div class="col-xl-8 col-lg-8">
                <div class="card">
                    <div class="card-header d-flex justify-content-start">
                        <h4 class="card-title mt-1">Thông tin sản phẩm</h4>
                        <h4 class="badge bg-success text-light fs-14 ms-2 px-2 py-1">
                            @Html.DisplayTextFor(m => m.ProductDetail.ApprovedStatusText)
                        </h4>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.ProductDetail.ProductName, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.ProductDetail.ProductName, new { @class = "form-control" })
                                </div>

                            </div>
                            <div class="col-lg-6">
                                @Html.LabelFor(m => m.ProductDetail.Categories, new { @class = "form-label" })
                                @Html.DropDownListFor(m => m.ProductDetail.CategoryId, Model.ProductDetail.Categories, "Chọn danh mục", new
                                {
                                   @class = "form-control",
                                   @data_choices = "true",
                                   @data_choices_groups = "true",
                                   @data_placeholder = "Chọn danh mục"
                                })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">

                                <div class="mb-3">
                                    @Html.LabelFor(m => m.ProductDetail.CreatedAt, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.ProductDetail.CreatedAt, new { @class = "form-control", @readonly = "" })
                                </div>

                            </div>
                            <div class="col-lg-4">

                                <div class="mb-3">
                                @Html.LabelFor(m => m.ProductDetail.UpdatedAt, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.ProductDetail.UpdatedAt, new { @class = "form-control", @readonly = "" })
                                </div>

                            </div>
                            <div class="col-lg-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.ProductDetail.CreatedBy, new { @class = "form-label" })
                                @Html.TextBoxFor(m => m.ProductDetail.CreatedBy, new { @class = "form-control", @readonly = "" })
                                </div>

                            </div>
                            <div class="col-lg-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.ProductDetail.ApprovedStatusText, new { @class = "form-label" })
                                @Html.TextBoxFor(m => m.ProductDetail.ApprovedStatusText, new { @class = "form-control", @readonly = "", })
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.ProductDetail.ApprovedBy, new { @class = "form-label" })
                                @Html.TextBoxFor(m => m.ProductDetail.ApprovedBy, new { @class = "form-control", @readonly = "" })
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-3">
                                @Html.LabelFor(m => m.ProductDetail.ApprovedAt, new { @class = "form-label" })
                                @Html.TextBoxFor(m => m.ProductDetail.ApprovedAt, new { @class = "form-control", @readonly = "" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="mb-3">
                                @Html.LabelFor(m => m.ProductDetail.Summary, new { @class = "form-label" })
                                @Html.TextAreaFor(m => m.ProductDetail.Summary, new { @class = "form-control bg-light-subtle", @rows = "7" })
                                </div>
                                <div class="mb-3">
                                @Html.LabelFor(m => m.ProductDetail.Content, new { @class = "form-label" })
                                @Html.TextAreaFor(m => m.ProductDetail.Content, new { @class = "form-control bg-light-subtle", @rows = "7" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card">
                        <div class="card-header">
                            <h4 class="card-title mb-0">Thông tin nguyên liệu</h4>
                        </div>
                        <div class="card-body">
                            <div class="d-flex align-items-center mb-3">
                                <div class="dropdown">
                                    <button class="btn btn-primary dropdown-toggle" type="button" id="ingredientDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                        Chọn nguyên liệu
                                    </button>
                                    <ul class="dropdown-menu" aria-labelledby="ingredientDropdown" id="ingredient-dropdown-menu">
                                    </ul>
                                </div>
                            </div>
                            <ul class="list-group" id="selected-ingredients-list" style="max-height: 16rem;overflow-y: auto;">
                            </ul>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-header">
                            <h4 class="card-title">Thông tin giá bán/khuyến mãi</h4>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-lg-4">

                                    @Html.LabelFor(m => m.ProductDetail.OriginalPrice, new { @class = "form-label" })

                                    <div class="input-group mb-3">
                                        <span class="input-group-text fs-20"><i class='bx bx-dollar'></i></span>
                                    @Html.TextBoxFor(m => m.ProductDetail.OriginalPrice, new { @class = "form-control", @type = "number" })
                                    </div>

                                </div>
                                <div class="col-lg-4">

                                @Html.LabelFor(m => m.ProductDetail.Discount, new { @class = "form-label" })
                                    <div class="input-group mb-3">
                                        <span class="input-group-text fs-20"><i class='bx bxs-discount'></i></span>
                                    @Html.TextBoxFor(m => m.ProductDetail.Discount, new { @class = "form-control", @type = "number" })
                                    </div>

                                </div>
                                <div class="col-lg-4">

                                @Html.LabelFor(m => m.ProductDetail.FinalPrice, new { @class = "form-label" })
                                    <div class="input-group mb-3">
                                        <span class="input-group-text fs-20"><i class='bx bxs-file-txt'></i></span>
                                    @Html.TextBoxFor(m => m.ProductDetail.FinalPrice, new { @class = "form-control", @readonly = "true", @disabled = "true", @type = "number" })
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="bg-light mb-3 rounded p-3">
                        <div class="row justify-content-end g-2">
                            <div class="col-3">
                                <a href="@ViewBag.ReturnURL" class="btn btn-outline-secondary w-100">Quay lại</a>
                            </div>
                            <div class="col-3">
                                <button type="submit" id="saveChangeBtn" class="btn btn-primary w-100">Lưu thay đổi</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>



        </div>
    </div>
    <!-- End Container Fluid -->
}

<script>
        $(document).ready(() => {
            const $ingredientDropdownMenu = $('#ingredient-dropdown-menu');
            const $selectedIngredientsList = $('#selected-ingredients-list');
            const unitList = ["cái"];
            const $productForm = $('#productForm');
            const productId = $('#ProductDetail_ProductId').val();

            function loadIngredients() {
                $.ajax({
                    url: "@Url.Action("Get", "Ingredient", new { area = "Admin" })",
                    method: 'GET',
                    dataType: 'json',
                    success: function(ingredients) {
                        $.each(ingredients, (_, ing) => {
                            const item = $(`
                                <li>
                                    <a class="dropdown-item" href="#"
                                       data-ingredient-id="${ing.IngredientId}"
                                   data-ingredient-name="${ing.IngredientName}"
                                       data-ingredient-description="${ing.Description}">
                                    ${ing.IngredientName}
                                    </a>
                                </li>
                            `);
                            $ingredientDropdownMenu.append(item);
                        });
                        updateDropdownState();
                    },
                    error: function(err) { console.error('Error loading ingredients:', err); }
                });
            }

            function loadProductIngredients() {
                $.ajax({
                    url: `@Url.Action("GetByProductID", "Ingredient", new { area = "Admin" })?productId=${productId}`,
                    method: 'GET',
                    dataType: 'json',
                    success: function(ingredients) {
                        $.each(ingredients, (_, ing) => addIngredientItem(ing));
                    },
                    error: function(err) { console.error('Error loading product ingredients:', err); }
                });
            }

            function addIngredientItem(ing) {
                if ($(`#ingredient-${ing.MaNguyenLieu}`).length) return;
                const item = $(`
                    <li class="list-group-item d-flex justify-content-between align-items-center" id="ingredient-${ing.MaNguyenLieu}">
                        <div>
                            <h5 class="mb-1">${ing.TenNguyenLieu}</h5>
                            <p class="mb-1">${ing.MoTa}</p>
                        </div>
                        <div class="d-flex align-items-center">
                            <input type="text" class="form-control form-control-sm quantity me-2" value="${ing.SoLuongCan || 1}" placeholder="Quantity">
                            <select class="form-select form-select-sm unit me-2">${unitList.map(u => `<option value="${u}" ${u === ing.DonViTinh ? 'selected' : ''}>${u}</option>`).join('')}</select>
                            <button class="btn btn-outline-danger btn-sm remove-btn">Remove</button>
                        </div>
                    </li>
                `);
                $selectedIngredientsList.append(item);
                disableDropdownItem(ing.MaNguyenLieu);
            }

            function disableDropdownItem(id) {
                $ingredientDropdownMenu.find(`a[data-ingredient-id="${id}"]`).addClass('disabled').css('pointer-events','none');
            }

            function enableDropdownItem(id) {
                $ingredientDropdownMenu.find(`a[data-ingredient-id="${id}"]`).removeClass('disabled').css('pointer-events','auto');
            }

            function updateDropdownState() {
                $selectedIngredientsList.find('.list-group-item').each(function() {
                    const id = $(this).attr('id').split('-')[1];
                    disableDropdownItem(id);
                });
            }

            // Dropdown click
            $ingredientDropdownMenu.on('click', 'a', function(e) {
                e.preventDefault();
                const ing = {
                    MaNguyenLieu: $(this).data('ingredient-id'),
                    TenNguyenLieu: $(this).data('ingredient-name'),
                    MoTa: $(this).data('ingredient-description'),
                    SoLuongCan: 1,
                    DonViTinh: unitList[0]
                };
                addIngredientItem(ing);
            });

            $selectedIngredientsList.on('click', '.remove-btn', function() {
                const id = $(this).closest('.list-group-item').attr('id').split('-')[1];
                $(this).closest('.list-group-item').remove();
                enableDropdownItem(id);
                updateDropdownState();
            });

            $productForm.on('submit', function(e) {
                e.preventDefault();
                const formData = new FormData(this);

                $selectedIngredientsList.find('.list-group-item').each(function(i) {
                    const id = $(this).attr('id').split('-')[1];
                    const qty = parseInt($(this).find('.quantity').val()) || 0;
                    const unit = $(this).find('.unit').val();
                    formData.append(`Ingredients[${i}].Id`, id);
                    formData.append(`Ingredients[${i}].Quantity`, qty);
                    formData.append(`Ingredients[${i}].Unit`, unit);
                });

                const files = $('#ProductImages')[0].files;
                for (let i = 0; i < files.length; i++) formData.append("ProductImages", files[i]);

                $.ajax({
                    url: '@Url.Action("Detail", "Product", new { area = "Admin" })',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    dataType: 'json',
                    success: function(res) {
                        alertMessage(res.message, res.type);
                        if(res.success) setTimeout(()=> location.reload(), 1500);
                    },
                    error: function(err) {
                        alertMessage("Error submitting data!", "red");
                    }
                });
            });

            $(document).on('click', '.remove-image-btn', function() {
                const imageUrl = $(this).data('image-url');
                const pid = $(this).data('product-id');
                $.post('@Url.Action("RemoveImage", "Product", new { area = "Admin" })', { productId: pid, imagePath: imageUrl }, function(res) {
                    alertMessage(res.type, res.message);
                    location.reload();
                }).fail(()=> alert("Error removing image"));
            });

            $('#ProductImages').on('change', function() {
                const files = this.files;
                const $carouselInner = $('.carousel-inner');
                $carouselInner.empty();

                for(let i=0;i<files.length;i++){
                    const reader = new FileReader();
                    reader.onload = function(e){
                        const $item = $('<div>').addClass('carousel-item'+(i===0?' active':''));
                        $('<img>').attr({src:e.target.result, alt:'img'}).addClass('d-block w-100').appendTo($item);
                        $carouselInner.append($item);
                    };
                    reader.readAsDataURL(files[i]);
                }
            });

            loadIngredients();
            loadProductIngredients();
        });

</script>



