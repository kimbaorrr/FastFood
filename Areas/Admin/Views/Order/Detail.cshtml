@{
	var orderDetail = ViewBag.OrderDetail as CustomOrderDetailViewModel;
}

<!-- Start Container -->
<div class="container-xxl">

	<div class="row">
		<div class="col-xl-9 col-lg-8">
			<div class="row">
				<div class="col-lg-12">
					<div class="card">
						<div class="card-body">
							<div class="d-flex align-items-center justify-content-between flex-wrap gap-2">
								<div>
									<h4 class="fw-medium text-dark d-flex align-items-center gap-2">#@orderDetail.OrderId</h4>
									<p class="mb-0">Đơn hàng / Chi tiết đơn hàng / #@orderDetail.OrderId - @orderDetail.OrderDate</p>
								</div>
								<div>
									<button type="button" id="cancelBtn" class="btn btn-outline-danger" style="display: none;">Hủy đơn</button>
								</div>
							</div>

							<div class="mt-4">
								<h4 class="fw-medium text-dark">Trạng thái đơn</h4>
							</div>
							<div class="row">
								<div class="col-12">
									<p class="mb-1 mt-3">@orderDetail.OrderStatuses.StatusName</p>
									<div class="progress mb-3" style="height: 10px;">
										<div class="progress-bar @orderDetail.OrderStatuses.Color" role="progressbar" style="width: @orderDetail.OrderStatuses.Progress%" aria-valuenow="@orderDetail.OrderStatuses.Progress" aria-valuemin="0" aria-valuemax="100">
										</div>
									</div>
								</div>

							</div>
						</div>
						<div class="card-footer d-flex align-items-center justify-content-between bg-light-subtle flex-wrap gap-2">
							<!-- Left section with two lines of text -->
							<div class="d-flex flex-column">
								<p class="bg-body mb-1 rounded border px-2 py-1">
									<i class="bx bx-alarm fs-16 align-middle"></i> Thời gian giao hàng dự kiến:
									<span class="text-dark fw-medium">@(orderDetail.EstimatedDeliveryTime.HasValue ? orderDetail.EstimatedDeliveryTime.Value.ToString("dd/MM/yyyy") : "Không xác định !")</span>
								</p>
								<p class="bg-body mb-0 rounded border px-2 py-1">
									<i class="bx bx-arrow-from-left fs-16 align-middle"></i> Thời gian giao hàng thực tế:
									<span class="text-dark fw-medium">@(orderDetail.ActualDeliveryTime.HasValue ? orderDetail.ActualDeliveryTime.Value.ToString("dd/MM/yyyy HH:mm:ss") : "Không xác định !")</span>
								</p>
							</div>

							<!-- Right section with button -->
							<div>
								<button class="btn btn-primary" id="status-btn"></button>
							</div>
						</div>
					</div>
					<div class="card">
						<div class="card-header">
							<h4 class="card-title">Sản phẩm đã mua</h4>
						</div>
						<div class="card-body">
							<div class="table-responsive">
								<table class="table-hover table-centered mb-0 table align-middle">
									<thead class="bg-light-subtle border-bottom">
										<tr>
											<th>ID</th>
											<th>Tên sản phẩm</th>
											<th>Đơn giá</th>
											<th>Số lượng</th>
											<th>Thành tiền</th>
										</tr>
									</thead>
									<tbody>
										@foreach (var detail in orderDetail.OrderDetails)
										{
											<tr>
												<td>@detail.ProductId</td>
												<td>@detail.Product.ProductName</td>
												<td>@detail.Product.FinalPrice đ</td>
												<td>@detail.Quantity</td>
												<td class="text-red fw-bold">@detail.TotalPrice đ</td>
											</tr>
										}


									</tbody>
								</table>
							</div>
						</div>
					</div>
					<div class="card bg-light-subtle">
						<div class="card-body">
							<div class="row g-3 g-lg-0">
								<div class="col-lg-3 border-end">
									<div class="d-flex align-items-center justify-content-between gap-3 px-3">
										<div>
											<p class="text-dark fw-medium fs-16 mb-1">Ngày thanh toán</p>
											<p class="mb-0">@(orderDetail.PaymentDate)</p>
										</div>
										<div class="avatar bg-light d-flex align-items-center justify-content-center rounded">
											<iconify-icon icon="solar:shop-2-bold-duotone" class="fs-35 text-primary"></iconify-icon>
										</div>
									</div>
								</div>
								<div class="col-lg-3 border-end">
									<div class="d-flex align-items-center justify-content-between gap-3 px-3">
										<div>
											<p class="text-dark fw-medium fs-16 mb-1">Ngày đặt</p>
											<p class="mb-0">@orderDetail.NgayDat</p>
										</div>
										<div class="avatar bg-light d-flex align-items-center justify-content-center rounded">
											<iconify-icon icon="solar:calendar-date-bold-duotone" class="fs-35 text-primary"></iconify-icon>
										</div>
									</div>
								</div>
								<div class="col-lg-3 border-end">
									<div class="d-flex align-items-center justify-content-between gap-3 px-3">
										<div>
											<p class="text-dark fw-medium fs-16 mb-1">Người mua</p>
											<p class="mb-0">@orderDetail.Buyer</p>
										</div>
										<div class="avatar bg-light d-flex align-items-center justify-content-center rounded">
											<iconify-icon icon="solar:user-circle-bold-duotone" class="fs-35 text-primary"></iconify-icon>
										</div>
									</div>
								</div>
								<div class="col-lg-3">
									<div class="d-flex align-items-center justify-content-between gap-3 px-3">
										<div>
											<p class="text-dark fw-medium fs-16 mb-1">Mã giao dịch</p>
											<p class="mb-0">@(orderDetail.TransactionId)</p>
										</div>
										<div class="avatar bg-light d-flex align-items-center justify-content-center rounded">
											<iconify-icon icon="solar:clipboard-text-bold-duotone" class="fs-35 text-primary"></iconify-icon>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="col-xl-3 col-lg-4">
			<div class="card">
				<div class="card-header">
					<h4 class="card-title">Tổng quan đơn hàng</h4>
				</div>
				<div class="card-body">
					<div class="table-responsive">
						<table class="mb-0 table">
							<tbody>
								<tr>
									<td class="px-0">
										<p class="d-flex align-items-center mb-0 gap-1"><iconify-icon icon="solar:clipboard-text-broken"></iconify-icon> Tổng hóa đơn : </p>
									</td>
									<td class="text-dark fw-medium px-0 text-end">@orderDetail.TotalPrice</td>
								</tr>
								<tr>
									<td class="px-0">
										<p class="d-flex align-items-center mb-0 gap-1"><iconify-icon icon="solar:kick-scooter-broken" class="align-middle"></iconify-icon> Phí vận chuyển : </p>
									</td>
									<td class="text-dark fw-medium px-0 text-end">+@orderDetail.ShippingFee</td>
								</tr>
								<tr>
									<td class="px-0">
										<p class="d-flex align-items-center mb-0 gap-1"><iconify-icon icon="solar:ticket-broken" class="align-middle"></iconify-icon> Mã khuyến mãi : </p>
									</td>
									<td class="text-dark fw-medium px-0 text-end">-@orderDetail.DiscountAmount</td>
								</tr>

							</tbody>
						</table>
					</div>
				</div>
				<div class="card-footer d-flex align-items-center justify-content-between bg-light-subtle">
					<div>
						<p class="fw-medium text-dark mb-0">Tổng thanh toán</p>
					</div>
					<div>
						<p class="fw-bold text-danger mb-0">@orderDetail.TotalPay vnđ</p>
					</div>

				</div>
			</div>
			<div class="card">
				<div class="card-header">
					<h4 class="card-title">Thông tin khách hàng</h4>
				</div>
				<div class="card-body">
					<div class="d-flex align-items-center gap-2">
						<img src="@orderDetail.Customer.ThumbnailImage" alt="" class="avatar rounded-3 border-light border-3 border">
						<div>
							<p class="mb-1">@(orderDetail.Customer.LastName + " " + orderDetail.Customer.FirstName)</p>
							<a href="#!" class="link-primary fw-medium">@orderDetail.Customer.Email</a>
						</div>
					</div>
					<div class="d-flex justify-content-between mt-3">
						<h5 class="">Số điện thoại</h5>
					</div>
					<p class="mb-1">@orderDetail.Customer.Phone</p>

					<div class="d-flex justify-content-between mt-3">
						<h5 class="">Địa chỉ giao hàng</h5>
					</div>

					<div>
						<p class="mb-1">@orderDetail.Customer.Address</p>
					</div>
				</div>
			</div>


		</div>
	</div>
	<!-- Shipping Info Modal -->
	@await Component.InvokeAsync("EmployeeOrder", new { viewName = "ShippingInfo", orderDetail = orderDetail })

</div>


<script>
	<script>
	const statusMapping = {
		0: { next: 1, name: "Đã thanh toán" },
		1: { next: 4, name: "Đang thực hiện món" },
		4: { next: 5, name: "Chờ giao hàng" },
		5: { next: 6, name: "Đang giao hàng" },
		6: { next: 7, name: "Đã giao hàng" },
		7: { next: 7 }
	};

	function sendOrderStatus(orderId, status, token) {
		$.ajax({
			url: '@Url.Action("UpdateOrderStatus", "Order", new { area = "Admin" })',
			type: 'POST',
			dataType: 'json',
			data: {
				id: orderId,
				orderStatus: status,
				__RequestVerificationToken: token
			},
			success: function (response) {
				alertMessage(response.message, response.type);
				if (response.success) {
					setTimeout(() => location.reload(), 1500);
				}
			},
			error: function () {
				alert('Đã xảy ra lỗi khi cập nhật trạng thái đơn hàng.');
			}
		});
	}

	function updateOrderStatus(currentStatus) {
		return statusMapping[currentStatus]?.next || currentStatus;
	}

	$(document).ready(function () {
		let token = $('input[name="__RequestVerificationToken"]').val();
		let currentStatus = parseInt(@orderDetail.OrderStatuses.Id);
		const orderId = '@orderDetail.OrderId';

		$("#cancelBtn")
			.toggle(currentStatus === 0 || currentStatus === 1)
			.click(() => {
				sendOrderStatus(orderId, 8, token);
			});

		$("#status-btn")
			.text(statusMapping[currentStatus]?.name || '')
			.show()
			.prop("disabled", currentStatus === 7);

		if (currentStatus === 5) {
			checkShippingInfo(orderId);
		}

		$("#status-btn").click(function () {
			const newStatus = updateOrderStatus(currentStatus);
			if (newStatus && statusMapping[newStatus]) {
				currentStatus = newStatus;
				$("#status-btn").text(statusMapping[currentStatus]?.name || '');
				sendOrderStatus(orderId, currentStatus, token);

				if (currentStatus === 7) {
					$("#status-btn").hide();
				}
			}
		});
	});
</script>


</script>


