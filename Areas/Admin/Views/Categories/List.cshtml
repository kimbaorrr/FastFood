@{
	ViewBag.Title = "Tất cả danh mục";
	var categories = ViewBag.Categories as IPagedList<Category>;
	var categoriesByProductCount = ViewBag.CategoriesByProductCount as List<Category>;
	var currentPage = ViewBag.CurrentPage as int?;
	var totalPages = ViewBag.TotalPages as int?;

}

<!-- Start Container Fluid -->
<div class="container-fluid">
	<div class="row">
		@foreach (var category in categoriesByProductCount!)
		{
			<div class="col-md-6 col-xl-3">
				<div class="card">
					<div class="card-body text-center">
						<div class="bg-secondary-subtle d-flex align-items-center justify-content-center mx-auto rounded">
							<img src="@category.ThumbnailImage" alt="" class="avatar-xl">
						</div>
						<h4 class="mb-0 mt-3">@category.CategoryName</h4>
					</div>
				</div>
			</div>
		}


	</div>

	<div class="row">
		<div class="col-xl-12">
			<div class="card">
				<div class="card-header d-flex justify-content-between align-items-center gap-1">
					<h4 class="card-title flex-grow-1">@ViewBag.Title</h4>
					<div class="d-flex gap-2">
						<button id="deleteCategorySelected" class="btn btn-danger d-none btn-sm">Xóa được chọn</button>
						<button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#createCategoryModal">Tạo danh mục</button>
					</div>
				</div>
				<div>
					<div class="table-responsive">
						<table class="table-hover table-centered mb-0 table align-middle">
							<thead class="bg-light-subtle">
								<tr>
									<th style="width: 20px;">
										<div class="form-check">
											<input type="checkbox" class="form-check-input" id="selectAllCategory">
											<label class="form-check-label" for="selectAllCategory"></label>
										</div>
									</th>
									<th>Tên danh mục</th>
									<th>Mô tả</th>
									<th>Người tạo</th>
									<th>Ngày tạo</th>
									<th>Tổng sản phẩm</th>
									<th>Thao tác</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var category in categories!)
								{
									<tr>
										<td>
											<div class="form-check">
												<input type="checkbox" class="form-check-input category-checkbox" id="customCheck2">
												<label class="form-check-label" for="customCheck2"></label>
											</div>
										</td>
										<td>
											<div class="d-flex align-items-center gap-2">
												<div class="bg-light avatar-md d-flex align-items-center justify-content-center rounded">
													<img src="@category.ThumbnailImage" alt="" class="avatar-md">
												</div>
												<p class="text-dark fw-medium fs-15 mb-0">@category.CategoryName</p>
											</div>
											
										</td>
										<td>@category.Description</td>
										<td>@(category.CreatedBy.HasValue ? category.CreatedByNavigation!.LastName + " " + category.CreatedByNavigation.FirstName : string.Empty)</td>
										<td>@category.CreatedAt</td>
										<td>@category.Products.Count</td>
										<td>
											<div class="d-flex gap-2">
												<button type="button" class="btn btn-soft-primary btn-sm btn-edit" data-category-id="@category.CategoryId" data-category-name="@category.CategoryName" data-category-description="@category.Description" data-bs-toggle="modal" data-bs-target="#editCategoryModal"><iconify-icon icon="solar:pen-broken" class="fs-18 align-middle"></iconify-icon></button>
												<button type="button" class="btn btn-soft-danger btn-sm btn-delete" data-category-id="@category.CategoryId"><iconify-icon icon="solar:trash-bin-minimalistic-2-broken" class="fs-18 align-middle"></iconify-icon></button>
											</div>
										</td>
									</tr>
								}


							</tbody>
						</table>
					</div>
					<!-- end table-responsive -->
				</div>
				<div class="card-footer border-top">
					<nav aria-label="Page navigation example">
						<ul class="pagination justify-content-end mb-0">
							@if (ViewBag.CurrentPage > 1)
							{
								<li class="page-item">
									<a class="page-link" href="@Url.Action("List", "Categories", new { area = "Admin", page = ViewBag.CurrentPage - 1 })">
										Trước đây
									</a>
								</li>
							}
							else
							{
								<li class="page-item disabled">
									<span class="page-link">Trước đây</span>
								</li>
							}

							<!-- Page Numbers -->
							@for (int i = 1; i <= ViewBag.TotalPages; i++)
							{
								if (i == ViewBag.CurrentPage)
								{
									<li class="page-item active">
										<span class="page-link">@i</span>
									</li>
								}
								else
								{
									<li class="page-item">
										<a class="page-link" href="@Url.Action("List", "Categories", new { area = "Admin", page = i })">@i</a>
									</li>
								}
							}

							<!-- Next Page Link -->
							@if (ViewBag.CurrentPage < ViewBag.TotalPages)
							{
								<li class="page-item">
									<a class="page-link" href="@Url.Action("List", "Categories", new { area = "Admin", page = ViewBag.CurrentPage + 1 })">
										Tiếp theo
									</a>
								</li>
							}
							else
							{
								<li class="page-item disabled">
									<span class="page-link">Tiếp theo</span>
								</li>
							}
						</ul>
					</nav>
				</div>
			</div>
		</div>
	</div>
	<!-- Create Category Modal -->
	@await Component.InvokeAsync("EmployeeCategory", new { viewName = "Create", model = new NewCategoryViewModel() })

	<!--Edit Category Modal-->
	@await Component.InvokeAsync("EmployeeCategory", new { viewName = "Edit", model = new EditCategoryViewModel() })
</div>
<!-- End Container Fluid -->
<script>
	$(document).ready(function () {
		$('.category-checkbox').on("change", function () {
			if ($('.category-checkbox:checked').length > 0) {
				$('#deleteCategorySelected').show();
			} else {
				$('#deleteCategorySelected').hide();
			}
		});

		// $('.category-description').each(function () {
		//     var fullDescription = $(this).data('full-description');
		//     if (fullDescription.length > 30) {
		//         var shortDescription = fullDescription.substring(0, 30) + ' ...';
		//         $(this).text(shortDescription);
		//     }
		// });

		$('#selectAllCategory').on('change', function () {
			$('.category-checkbox').prop('checked', this.checked);
			toggleActionButtons();
		});

		$('.category-checkbox').on('change', function () {
			toggleActionButtons();
		});

		function toggleActionButtons() {
			const anyChecked = $('.category-checkbox:checked').length > 0;
			$('#deleteCategorySelected').toggleClass('d-none', !anyChecked);
		}
		$('#deleteCategorySelected').on('click', function () {
			let selectedIds = [];
			$('.category-checkbox:checked').each(function () {
				let categoryId = $(this).closest("tr").find(".btn-delete").data('category-id');
				if (categoryId !== undefined) {
					selectedIds.push(categoryId);
				}
			});

			if (selectedIds.length > 0) {
				if (confirm("Bạn có chắc chắn muốn xóa các danh mục đã chọn không?")) {
					$.ajax({
						type: 'POST',
						url: '@Url.Action("MultipleDelete", "Categories", new { area = "Admin" })',
						dataType: 'json',
						traditional: true,
						data: {
							categoryIds: selectedIds,
						},
						success: function (response) {
							alertMessage(response.message, response.type);
							setTimeout(() => {
								location.reload();
							}, 1500);
						},
						error: function (xhr, status, error) {
							alert('Đã xảy ra lỗi khi thực hiện yêu cầu.');
						}
					});
				}
			} else {
				alert('Vui lòng chọn ít nhất một danh mục để xóa.');
			}
		});

		$('.btn-delete').click(function () {
			const categoryId = $(this).data('category-id');

			$.ajax({
				url: '@Url.Action("Delete", "Categories", new { area = "Admin" })',
				method: 'POST',
				dataType: 'json',
				data: {
					categoryId: categoryId,
				},
				success: function (response) {
					alertMessage(response.message, response.type);
					if (response.success) {
						setTimeout(() => {
							location.reload();
						}, 1500);
					}

				},
				error: function (xhr, status, error) {
					alert('Đã xảy ra lỗi khi thực hiện yêu cầu.');
				}
			});
		});

		$(".btn-edit").on("click", function () {
			const categoryId = $(this).data("category-id");
			const categoryName = $(this).data("category-name");
			const categoryDescription = $(this).data("category-description");

			$("#editCategoryModalLabel").find("span").text(categoryId);
			$("#MaDanhMuc").val(categoryId);
			$(".category-name").val(categoryName);
			$(".category-description").val(categoryDescription);

		})
	});
</script>

<script>

</script>

